import {Process} from '../model/process';

export const PROCESSES: Process[] = [
    { id: 1, name: 'Introduction to Binary', description: 'Binary is a number system built on 0s and 1s, not 0-9 like decimal. Computers read binary instructions, also called machine code to figure out what they must do. Why not have computers use the decimal number system, since that is what we use? Since computers use components that are on or off (represented as 0 or 1), it is much easier and more efficient for computers to use the binary number system. Luckily, we do not have to program in machine code, since higher-level languages are compiled and executed on-site as machine code. How do we read binary? The same way we read decimal numbers! Instead of multiplying the position by 10 to the power of something, instead, multiply it by 2 to the power of something, like so: 1011 = 1 x 2^3 + 0 x 2^2 + 1 x 2^1 + 1 x 2^0 = 11.' },
    { id: 2, name: 'Introduction to Logic Gates', description: 'What are logic gates? They are the fundamental building blocks of computers and electronic components everywhere in our lives! Our devices are made up of tens of thousands of these little switches. There are three main types of logic gates: AND, OR, and NOT. Every other gate and device can be made from these three gates. AND gates require that all inputs must match to give the proper output. OR gates will go high if ANY ONE input is high. NOT gates, also referred to as inverters, take the input signal and invert it as the output signal.' },
    { id: 3, name: 'Logic Gates Demo', description: 'Explore the interactive demo below to learn how AND, OR and NOT gates work:' },
    { id: 4, name: 'SR Latches and Memory', description: 'SR Latches, or Set-Reset Latches, are used to store values in memory. This is how your computer can remember things, like which tabs you have open and where you left off on that YouTube video. The value is stored when the set signal turns on, and reset when the reset signal turns on.' },
    { id: 5, name: 'SR Latch Demo', description: 'Explore the interactive demo below to learn how the SR Latch works: This implementation uses 2 NOR gates (OR gates with NOT gates).' },
    { id: 6, name: 'Importance of Components in Machine Learning', description: 'The CPU (Central Processing Unit) is the brains of your computer and of any machine learning model. The CPU can run small-scale machine learning models, but is not designed for creating things like ChatGPT due to resource constraints.     The GPU (Graphics Processing Unit) helps you run your favorite video games. Ok, well maybe it does more than that. Technically, it is responsible for all the math required to display your favorite games. In Machine Learning, the GPU does a bunch of math really fast when training a model to tell it how to behave. Since GPUs usually have more memory on-board, they can also run much faster than a CPU could when performing the same tasks.    Memory is very important when training a machine learning model. The more you have, the more efficiently you can train your model, and the more parameters your model can handle at once. Random access memory (RAM) is a cheap and efficient way to add extra memory to your system, and comes in sticks similar to this:    The rule of thumb with RAM when training a machine learning model is the more the merrier, where your only limit is your motherboard.' },
]